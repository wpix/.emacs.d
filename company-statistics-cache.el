(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("company-statistics-mode" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "init-file-debug" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "face--attributes-unspecified" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "auth-source-backend" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 3) ((:keyword "setq") . 3) (emacs-lisp-mode . 3) (nil . 3)) "eval-buffer-list" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "features" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "auto-coding-alist" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "company-complete-selection" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "available" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "list" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "undo" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "move" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 4) (org-mode . 4) (nil . 4)) "expression" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "uppercase" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "outline" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "require" (((:file "/Users/Ying/.emacs.d/lisp/init-spelling.el") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "/Users/Ying/.emacs.d/init.el") . 1) ((:keyword "require") . 1)) "flyspell-auto-correct-previous-pos" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "read-answer-map--memoize" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "auto-composition-mode" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "auto-coding-functions" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "suggest-key-bindings" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Sri Tapaswi Nori <snori@purdue.edu>" (((:file "/Users/Ying/*message*-20190530-081339") . 1) (notmuch-message-mode . 1) (nil . 1)) "representation" (((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1) (org-mode . 1) (nil . 1)) "rotations" (((:file "/Users/Ying/org-notes/notes-MTEX-course") . 2) (org-mode . 2) (nil . 2)) "rodrigues" (((:file "/Users/Ying/org-notes/notes-MTEX-course") . 2) (org-mode . 2) (nil . 2)) "axis" (((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1) (org-mode . 1) (nil . 1)) "analysis" (((:file "/Users/Ying/org-notes/hobo-schedule.org") . 1) (org-mode . 2) (nil . 2) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1)) "misorientaiton" (((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1) (org-mode . 1) (nil . 1)) "probability" (((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1) (org-mode . 1) (nil . 1)) "add-hook" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "message-mode-hook" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "company-ispell" (((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "forward" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "List" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "purpose" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "backward" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 3) (org-mode . 3) (nil . 3)) "previous" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "tool" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "start" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "of" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "paragraph" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "beginning" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "sentence" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "defunct" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "indention" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "apropos" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "command" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 3) (org-mode . 3) (nil . 3)) "finding" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "highlight" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 3) (org-mode . 3) (nil . 3)) "phrase" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "point" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2) (org-mode . 2) (nil . 2)) "access" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "window" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "ret" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "directory" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 3) (org-mode . 3) (nil . 3)) "quit" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "active" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "everything" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "deletion" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "creat" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "marked" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 9) (org-mode . 9) (nil . 9)) "replace" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "filesmith" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "auto" (((:file "/Users/Ying/.config/karabiner.edn") . 1) (text-mode . 1) (nil . 2) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1)) "autoabstract" (((:file "/Users/Ying/.config/karabiner.edn") . 1) (text-mode . 1) (nil . 1)) "defoedation" (((:file "/Users/Ying/.config/karabiner.edn") . 1) (text-mode . 1) (nil . 1)) "global-abbrev-table" (((:file "/Users/Ying/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pattern" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "name" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "complete" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "output" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "insert" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "buffer" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "asynchronous" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "compile" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "common" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "recompile" (((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1) (org-mode . 1) (nil . 1)) "Chen" (((:file "/Users/Ying/*message*-20190530-155802") . 1) (notmuch-message-mode . 1) (nil . 1)) "speaker" ((org-mode . 1) (nil . 1)) "emacs" (((:file "/Users/Ying/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "ricochet" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "hurricane" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 4) (org-mode . 4) (nil . 4)) "Face" ((Custom-mode . 1) (nil . 1)) "forest" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 5) (org-mode . 5) (nil . 5)) "landscape" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "regeneration" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "freak" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "additionally" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "important" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "climate" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "water" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "resource" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "authority" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "transforation" (((:file "/Users/Ying/*message*-20190531-071029") . 1) (notmuch-message-mode . 1) (nil . 1)) "disagreement" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "between" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "management" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "renewable" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "electricity" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "jurisdiction" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "economically" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "feasible" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "challenge" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "reliable" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "connection" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 2) (org-mode . 2) (nil . 2) ((:symbol "connection") . 1)) "compact" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "please" (((:file "/Users/Ying/.emacs.d/abbrev_defs") . 1) (fundamental-mode . 1) (nil . 1)) "enable" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "demand" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "profile" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "average" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "maximum" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "load" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "given" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "greatly" (((:file "/Users/Ying/org-notes/li-sustainability.org") . 1) (org-mode . 1) (nil . 1)) "string-chars-consed" ((lisp-interaction-mode . 2) (nil . 2)) "add-log-current-defun-function" ((lisp-interaction-mode . 4) (nil . 4)) ":search-type" (((:file "/Users/Ying/.emacs.d/init.el") . 2) ((:keyword "quote") . 2) (emacs-lisp-mode . 2) (nil . 2)) "winner-mode" (((:file "/Users/Ying/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "smartparens-mode" (((:file "/Users/Ying/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "provide" (((:file "/Users/Ying/.emacs.d/notmuch-config.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 6) (nil . 6) ((:file "/Users/Ying/.emacs.d/lisp/init-ido.el") . 1) ((:keyword "setq") . 4) ((:file "/Users/Ying/.emacs.d/lisp/init-dired.el") . 1) ((:keyword "defun") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-defaults.el") . 1) ((:file "/Users/Ying/.emacs.d/lisp/elfeed-config.el") . 1) ((:file "/Users/Ying/.emacs.d/lisp/hugo-config.el") . 1)) "~/hugo/mini/" (((:file "/Users/Ying/.emacs.d/lisp/hugo-config.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)))) company-statistics--log [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ("company-statistics-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("init-file-debug" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("face--attributes-unspecified" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("auth-source-backend" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 2)) ("eval-buffer-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("features" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("auto-coding-alist" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 2)) ("company-complete-selection" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("auth-source-backend" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("auto-coding-alist" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("available" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("list" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("undo" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("move" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("expression" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("move" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("uppercase" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("outline" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("list" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-spelling.el") . 1)) ("flyspell-auto-correct-previous-pos" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("read-answer-map--memoize" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("auto-composition-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("auto-coding-functions" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("auth-source-backend" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("suggest-key-bindings" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("Sri Tapaswi Nori <snori@purdue.edu>" (nil . 1) (notmuch-message-mode . 1) ((:file "/Users/Ying/*message*-20190530-081339") . 1)) ("representation" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1)) ("rotations" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 2)) ("rotations" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1)) ("rodrigues" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 2)) ("rodrigues" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1)) ("axis" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1)) ("analysis" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/hobo-schedule.org") . 1)) ("misorientaiton" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1)) ("probability" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1)) ("analysis" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-MTEX-course") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("message-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("company-ispell" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-company.el") . 1)) ("forward" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("List" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("purpose" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("backward" (nil . 3) (org-mode . 3) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 3)) ("previous" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("List" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("move" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("backward" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("tool" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("start" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("of" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("paragraph" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("forward" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("backward" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("paragraph" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("available" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("move" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("beginning" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("sentence" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("sentence" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("beginning" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("defunct" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("indention" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("apropos" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("apropos" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("command" (nil . 3) (org-mode . 3) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 3)) ("finding" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("highlight" (nil . 3) (org-mode . 3) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 3)) ("phrase" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("highlight" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("expression" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("highlight" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("point" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 2)) ("point" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("access" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("window" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("ret" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("directory" (nil . 3) (org-mode . 3) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 3)) ("directory" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("quit" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("active" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("everything" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("deletion" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("creat" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("directory" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("marked" (nil . 9) (org-mode . 9) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 9)) ("marked" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("marked" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("marked" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("marked" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("marked" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("marked" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("marked" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("replace" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("filesmith" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("marked" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("auto" (nil . 1) (text-mode . 1) ((:file "/Users/Ying/.config/karabiner.edn") . 1)) ("autoabstract" (nil . 1) (text-mode . 1) ((:file "/Users/Ying/.config/karabiner.edn") . 1)) ("defoedation" (nil . 1) (text-mode . 1) ((:file "/Users/Ying/.config/karabiner.edn") . 1)) ("global-abbrev-table" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/Ying/.emacs.d/init.el") . 1)) ("pattern" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("name" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("complete" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("command" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("output" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("insert" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("buffer" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("asynchronous" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("compile" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("common" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("recompile" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("command" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/notes-mastering-emacs.org") . 1)) ("Chen" (nil . 1) (notmuch-message-mode . 1) ((:file "/Users/Ying/*message*-20190530-155802") . 1)) ("speaker" (nil . 1) (org-mode . 1)) ("emacs" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/init.el") . 1)) ("ricochet" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("hurricane" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("Face" (nil . 1) (Custom-mode . 1)) ("hurricane" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("forest" (nil . 5) (org-mode . 5) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 5)) ("landscape" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("regeneration" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("freak" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("forest" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("hurricane" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("additionally" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("forest" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("important" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("hurricane" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("forest" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("forest" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("climate" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("water" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("resource" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("authority" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("transforation" (nil . 1) (notmuch-message-mode . 1) ((:file "/Users/Ying/*message*-20190531-071029") . 1)) ("disagreement" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("between" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("management" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("renewable" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("electricity" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("jurisdiction" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("economically" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("feasible" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("challenge" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("reliable" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("connection" (nil . 2) (org-mode . 2) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 2)) ("auto" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("compact" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("connection" (nil . 1) (org-mode . 1) ((:symbol "connection") . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("please" (nil . 1) (fundamental-mode . 1) ((:file "/Users/Ying/.emacs.d/abbrev_defs") . 1)) ("enable" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("demand" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("profile" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("average" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("maximum" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("load" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("given" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("greatly" (nil . 1) (org-mode . 1) ((:file "/Users/Ying/org-notes/li-sustainability.org") . 1)) ("string-chars-consed" (nil . 1) (lisp-interaction-mode . 1)) ("add-log-current-defun-function" (nil . 4) (lisp-interaction-mode . 4)) ("add-log-current-defun-function" (nil . 1) (lisp-interaction-mode . 1)) ("add-log-current-defun-function" (nil . 1) (lisp-interaction-mode . 1)) ("add-log-current-defun-function" (nil . 1) (lisp-interaction-mode . 1)) ("string-chars-consed" (nil . 1) (lisp-interaction-mode . 1)) (":search-type" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "quote") . 2) ((:file "/Users/Ying/.emacs.d/init.el") . 2)) (":search-type" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "quote") . 1) ((:file "/Users/Ying/.emacs.d/init.el") . 1)) ("winner-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/init.el") . 1)) ("smartparens-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/Ying/.emacs.d/init.el") . 1)) ("provide" (nil . 6) (emacs-lisp-mode . 6) ((:keyword "if") . 1) ((:file "/Users/Ying/.emacs.d/notmuch-config.el") . 1)) ("provide" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 4) ((:file "/Users/Ying/.emacs.d/lisp/init-ido.el") . 1)) ("provide" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-dired.el") . 1)) ("provide" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/init-defaults.el") . 1)) ("provide" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/elfeed-config.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/Users/Ying/.emacs.d/init.el") . 1)) ("provide" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/hugo-config.el") . 1)) ("~/hugo/mini/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/Users/Ying/.emacs.d/lisp/hugo-config.el") . 1))] company-statistics--index 0)